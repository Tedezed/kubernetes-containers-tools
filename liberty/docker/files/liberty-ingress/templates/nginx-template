
server {
        listen 80 default;
        listen 443 default ssl;
        server_name _;

        ssl_certificate /files/liberty-ingress/certs/kube-system_liberty-tls/tls.crt;
        ssl_certificate_key /files/liberty-ingress/certs/kube-system_liberty-tls/tls.key;
        
        root /files/error;

        error_page 502 https://$host:$server_port$request_uri;

        location / {
                try_files $uri $uri/ =404;
        }

        #location /liberty_status {
        #stub_status;
        #proxy_set_header   Host $host;
        #auth_basic "Restricted Content";
        #auth_basic_user_file /etc/nginx/.htpasswd;
        #access_log off;
        #allow 127.0.0.1;
        #deny all;
        #}
}

{% for ing in list_ing recursive %}
  {% for host in ing['list_hosts'] recursive %}

  {% if 'ssl'==ing['mode'] %}

  ################# SSL: {{ host['name_upstream'] }} #################

  # {{ host }}
  upstream {{ host['name_upstream'] }} {
    sticky expires=1h;
  {% for backend in host['backends'] recursive %}
    {% if '80'==backend['service_port'] %}
      server {{ backend['service_ip'] }};
      #queue 40 timeout=10s;
    {% else %}
      server {{ backend['service_ip'] }}:{{ backend['service_port'] }};
      #queue 40 timeout=10s;
    {% endif %}
  {% endfor %}
  }


  upstream {{ host['name_upstream'] }}_longpolling {
    sticky expires=1h;
  {% for backend in host['backends'] recursive %}
      server {{ backend['service_ip'] }}:8072;
  {% endfor %}
  }


    server {
      listen 80;
      server_name {{ host['host_name'] }};

      client_body_timeout 15s;
      client_header_timeout 15s;

      {% if '3'==ing['backend'] %}
        server_tokens off;
        add_header 'Referrer-Policy' 'strict-origin';
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location /{
          proxy_set_header   Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_pass http://{{ host['name_upstream'] }};
          keepalive_timeout {{ host['timeout'] }};
        }
        
      {% else %}

        return 301 https://$host$request_uri;

      {% endif %}

    }

    server{
      listen 443 ssl;
      proxy_read_timeout 300000;
      proxy_connect_timeout {{ host['timeout'] }};
      proxy_send_timeout {{ host['timeout'] }};

      server_name {{ host['host_name'] }};

      ssl on;
      ssl_dhparam {{ ing['patch'] }}/dhparam.pem;
      ssl_session_timeout {{ host['timeout'] }};
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

      ssl_prefer_server_ciphers on;

      #CERTITIFICADOS
      ssl_session_cache none;
      ssl_certificate {{ ing['dic_certs']['tls.crt'] }};
      ssl_certificate_key {{ ing['dic_certs']['tls.key'] }};
      {% if 'True'==host['client_ssl'] %}
        ssl_client_certificate {{ ing['dic_certs']['ca.crt'] }};
        ssl_verify_client on;
      {% endif %}

      gzip on;
      gzip_min_length 1100;
      gzip_buffers 4 32k;
      gzip_types text/plain application/x-javascript text/xml text/css;
      gzip_vary on;       

      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      server_tokens off;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";

      error_page 502 /index.html;
      location = /index.html {
        root  /files/error;
      }

    # Backends modes #

    {% if '1'==ing['backend'] %}

      location ~* (^/.*(css|woff|otf|js|jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp3|mp4|ogg|ogv)$|^/web/image.*) {
          proxy_pass http://{{ host['name_upstream'] }};
      }

      location / {
          proxy_redirect     off;
          proxy_set_header   Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_pass http://{{ host['name_upstream'] }};
      }


      location /longpolling/poll {
          proxy_pass http://{{ host['name_upstream'] }}_longpolling;
      }

      location /web/database/manager {
        proxy_set_header   Host $host;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://{{ host['name_upstream'] }};
      }

    {% elif '2'==ing['backend'] %}
    # Simple backend https

      location /{
          proxy_pass https://{{ host['name_upstream'] }};
        }

    {% elif '3'==ing['backend'] %}
    # Wordpress

    add_header 'Referrer-Policy' 'origin-when-cross-origin';
    add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";


      location /{
        proxy_pass https://{{ host['name_upstream'] }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        keepalive_timeout {{ host['timeout'] }};
      }

    {% elif '4'==ing['backend'] %}
    # Simple Prestashop

    add_header 'Referrer-Policy' 'origin-when-cross-originr';
    add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";


      location /{
        proxy_pass https://{{ host['name_upstream'] }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        keepalive_timeout {{ host['timeout'] }};
      }

    {% elif '5'==ing['backend'] %}
    # Wordpress insecure 

    add_header 'Referrer-Policy' 'origin-when-cross-origin';

      location /{
        proxy_pass https://{{ host['name_upstream'] }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        keepalive_timeout {{ host['timeout'] }};
      }


    {% else %}
    # All
      location /{
        proxy_pass https://{{ host['name_upstream'] }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        keepalive_timeout {{ host['timeout'] }};
      }
    {% endif %}

    }

  ################# SSL: {{ host['name_upstream'] }} #################

  {% elif 'cert_generator'==ing['mode'] %}

  ################# TLS-ACME: {{ host['name_upstream'] }} #################

  upstream {{ host['name_upstream'] }} {
    least_conn;
    keepalive 32;
    server {{ host['backend']['service_ip'] }}:{{ host['backend']['service_port'] }} max_fails=0 fail_timeout=0;
  }

  {% elif 'tls-acme'==ing['mode'] %}
  ################# TLS-ACME: {{ host['name_upstream'] }} #################

  upstream {{ host['name_upstream'] }} {
    sticky expires=1h;
  {% set port80 = {'found':False} %}
  {% set port443 = {'found':False} %}
  # https://stackoverflow.com/questions/9486393/jinja2-change-the-value-of-a-variable-inside-a-loop
  {% for backend in host['backends'] recursive %}
    # Search port: {{ backend }}
    {% if '80'==backend['service_port']|string %}
      # Port found {{ backend['service_port'] }}
      {% if port80.update({'found':True}) %} {% endif %}
    {% elif '443'==backend['service_port']|string %}
      # Port found {{ backend['service_port'] }}
      {% if port443.update({'found':True}) %} {% endif %}
    {% endif %}
  {% endfor %}

  {% for backend in host['backends'] recursive %}
    {% if (port80.found) and (port443.found) %}
      # Port force backend 80 - 80:{{port80}}/443:{{port443}}
      server {{ backend['service_ip'] }}:80 max_fails=0 fail_timeout=0;
    {% else %}
      # Port backend - 80:{{port80}}/443:{{port443}}
      server {{ backend['service_ip'] }}:{{ backend['service_port'] }} max_fails=0 fail_timeout=0;
    {% endif %}
  {% endfor %}
  }

  server {
    listen 80;
    listen [::]:80;
    set $proxy_upstream_name "-";
    server_name {{ host['host_name'] }};
    return 301 https://$host$request_uri;
  }


  server {
        server_name {{ host['host_name'] }};
        listen 443  ssl http2;
        listen [::]:443  ssl http2;

        # CERTITIFICADOS
        ssl on;
        ssl_dhparam {{ ing['patch'] }}/dhparam.pem;
        {% for cert in ing['dic_certs'] recursive %}
          # {{ host['host_name'] }} in {{ cert['hosts'] }}
          {% if host['host_name'] in cert['hosts'] %}
            ssl_certificate {{ cert[cert['secret_name']]['tls.crt'] }};
            ssl_certificate_key {{ cert[cert['secret_name']]['tls.key'] }};
          {% endif %}
        {% endfor %}
        #ssl_certificate /ingress-controller/ssl/example-tls-nginx.pem;
        #ssl_certificate_key /ingress-controller/ssl/example-tls-nginx.pem;
        #ssl_trusted_certificate /ingress-controller/ssl/example-tls-nginx-full-chain.pem;
        ssl_stapling                            on;
        ssl_stapling_verify                     on;

        # .well-known/acme-challenge/_selftest
        location /.well-known/acme-challenge {
            port_in_redirect off;
            set $proxy_upstream_name "";
            set $namespace      {{ ing['namespace_cert_generator'] }};
            set $ingress_name   {{ ing['name_cert_generator'] }};
            set $service_name   {{ ing['name_cert_generator'] }};

            client_max_body_size                    "1024m";
            proxy_set_header Host                   $host;
            proxy_set_header ssl-client-cert        "";
            proxy_set_header ssl-client-verify      "";
            proxy_set_header ssl-client-dn          "";
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Original-URI         $request_uri;
            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Proxy                  "";
            proxy_connect_timeout                   1800s;
            proxy_send_timeout                      1800s;
            proxy_read_timeout                      1800s;
            proxy_buffering                         off;
            proxy_buffer_size                       "4k";
            proxy_buffers                           4 "4k";
            proxy_request_buffering                 "on";
            proxy_http_version                      1.1;
            proxy_cookie_domain                     off;
            proxy_cookie_path                       off;
            proxy_next_upstream                     error timeout invalid_header http_502 http_503 http_504;
            proxy_pass http://{{ ing['name_cert_generator'] }};
            proxy_redirect                          off;
        }

        location / {
            port_in_redirect off;
            set $proxy_upstream_name "{{ host['name_upstream'] }}";
            #set $namespace      "default";
            #set $ingress_name   "example-ingress";
            #set $service_name   "svc-example";

            client_max_body_size                    "1024m";
            proxy_set_header Host                   $host;
            proxy_set_header ssl-client-cert        "";
            proxy_set_header ssl-client-verify      "";
            proxy_set_header ssl-client-dn          "";
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Original-URI         $request_uri;
            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header Proxy                  "";
            proxy_connect_timeout                   1800s;
            proxy_send_timeout                      1800s;
            proxy_read_timeout                      1800s;
            proxy_buffering                         off;
            proxy_buffer_size                       "4k";
            proxy_buffers                           4 "4k";
            proxy_request_buffering                 "on";
            proxy_http_version                      1.1;
            proxy_cookie_domain                     off;
            proxy_cookie_path                       off;
            proxy_next_upstream                     error timeout invalid_header http_502 http_503 http_504;
            {% if '4'==ing['backend'] %}
               proxy_pass https://{{ host['name_upstream'] }};
            {% else %}
              proxy_pass http://{{ host['name_upstream'] }};
            {% endif %}
            proxy_redirect                          off;
        }
    }

  ################# TLS-ACME: {{ host['name_upstream'] }} #################
  {% endif %}

  {% endfor %}
{% endfor %}