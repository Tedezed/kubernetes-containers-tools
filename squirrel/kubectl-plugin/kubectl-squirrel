#/bin/bash

SQUIRREL_USER_DIR="$HOME/.squirrel"
LOCAL_KEY="local"
EMAIL=$(cat $SQUIRREL_USER_DIR/config | jq ".email" | tr -d '"')

#COMPLETION_SQUIRREL="DEBUG"

_kubectl_squirrel()
{
  # Debug
  if [ "$COMPLETION_SQUIRREL" = "DEBUG" ]; then
  	echo ""
  	echo "Com: $COMP_WORDS ${COMP_WORDS[1]} ${COMP_WORDS[2]} ${#COMP_WORDS[@]}"
  	echo ""
  fi

  # Level 1
  if [ "${#COMP_WORDS[@]}" = "2" ]; then
  	COMPREPLY=($(compgen -W "nuts decrypt version update init drop-all" "${COMP_WORDS[1]}"))
  fi

  # Level 2
  if [ "${#COMP_WORDS[@]}" = "3" ] && [ "${COMP_WORDS[1]}" = "decrypt" ]; then
    NUTS=$(kubectl get nt --all-namespaces -o custom-columns=NAME:metadata.name,EMAIL:.data.email | grep "$EMAIL" | awk '{ print $1 }')
    COMPREPLY=($(compgen -W "$NUTS" "${COMP_WORDS[2]}"))
  fi

  # Level 3
  if [ "${#COMP_WORDS[@]}" = "4" ] && [ "${COMP_WORDS[1]}" = "decrypt" ]; then
    NUTS=$(kubectl get nt --all-namespaces -o custom-columns=NAME:metadata.name,EMAIL:.data.email | grep "$EMAIL" | awk '{ print $1 }')
    NAMESPACE=$(kubectl get nt --all-namespaces -o custom-columns=NAMESPACE:metadata.namespace,NAME:metadata.name,EMAIL:.data.email | grep "$EMAIL" | grep "${COMP_WORDS[2]}" | awk '{ print $1 }')
    COMPREPLY=($(compgen -W "$NAMESPACE" "${COMP_WORDS[3]}"))
  fi
}

if [[ "$1" == "drop-all" ]]
then
	rm -rf $SQUIRREL_USER_DIR
elif [[ "$1" == "init" ]]
then
	if [ ! -d "$SQUIRREL_USER_DIR" ]; then
		mkdir -p $SQUIRREL_USER_DIR
	 	bash -c "cd $SQUIRREL_USER_DIR \
	  		&& git init \
	  		&& git remote add origin https://github.com/Tedezed/slug-containers.git \
	  		&& git fetch --depth=1 \
	  		&& git checkout master \
	  		&& git config core.sparseCheckout true \
	  		&& echo squirrel/ >> .git/info/sparse-checkout \
	  		&& git read-tree -mu HEAD"
		read -r -p 'Email: ' USER_EMAIL
		echo "{"\""email"\"": "\""$USER_EMAIL"\"", "\""local_key"\"": "\""$LOCAL_KEY"\""}" > $SQUIRREL_USER_DIR/config
		OLD_DIR=$(pwd)
		cd $SQUIRREL_USER_DIR \
		&& python3 $SQUIRREL_USER_DIR/squirrel/docker/squirrel/main.py \
			mode="client-create-key" \
			key-file="$LOCAL_KEY" \
			email="$USER_EMAIL" \
			bits="4096"
		cd $OLD_DIR
		ls $SQUIRREL_USER_DIR
	fi
elif [[ "$1" == "version" ]]
then
    echo "v0.1"
    exit 0
elif [[ "$1" == "nuts" ]]
then
	if [ -z "$2" ]
	then
		kubectl get nt --all-namespaces -o custom-columns=NAMESPACE:metadata.namespace,NAME:metadata.name,EMAIL:.data.email,SERVICE:.data.squirrel_service,CREATION:.metadata.creationTimestamp | grep "NAME\|$EMAIL"
	else
		NAMESPACE=$2
		kubectl get nt -n $NAMESPACE -o custom-columns=NAME:metadata.name,EMAIL:.data.email,SERVICE:.data.squirrel_service,CREATION:.metadata.creationTimestamp | grep "NAME\|$EMAIL"
	fi
elif [[ "$1" == "decrypt" ]]
then
	if [ -z "$2" ]
	then
		exit 1
	else
		NUT_NAME=$2
	fi
		if [ -z "$3" ]
	then
		exit 1
	else
		NUT_NAMESPACE=$3
	fi
	NUT_JSON=$(kubectl get nt $NUT_NAME -n $NUT_NAMESPACE -o json)
	NUT=$(echo $NUT_JSON | jq '.data.nut' | cut -d '"' -f 2)
	echo $NUT | base64 --decode
	if [ -z "$NUT_JSON" ] || [ -z "$NUT" ]
	then
		echo "[ERROR] Empty internal variables NUT_JSON or NUT"
		exit 1
	else
		python3 $SQUIRREL_USER_DIR/squirrel/docker/squirrel/main.py mode="decrypt-text" encrypted-string="$NUT"
	fi
elif [[ "$1" == "update" ]]
then
	cd $SQUIRREL_USER_DIR \
		&& git fetch --all \
		&& git reset --hard origin/master \
		&& git pull \
		&& sudo cp squirrel/kubectl-plugin/kubectl-squirrel /usr/local/bin/kubectl-squirrel
elif [[ "$1" == "complete" ]]
then
	if [[ "$0" == "/bin/bash" ]] || [[ "$0" == "bash" ]]
	then
		export _kubectl_squirrel
		complete -F _kubectl_squirrel squirrel
	#elif [[ "$0" == "zsh" ]]
	#then
		#export _kubectl_squirrel
		#compdef _kubectl_squirrel squirrel
	fi
else
	echo "Commands: nuts, decrypt, version, init, drop-all, update"
fi